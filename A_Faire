int pnpoly(int nvert, float *vertx, float *verty, float testx, float testy)
{
  int i, j, c = 0;
  for (i = 0, j = nvert-1; i < nvert; j = i++) {
    if ( ((verty[i]>testy) != (verty[j]>testy)) &&
	 (testx < (vertx[j]-vertx[i]) * (testy-verty[i]) / (verty[j]-verty[i]) + vertx[i]) )
       c = !c;
  }
  return c;
}

bool PointInPolygon(Point point, Polygon polygon) {
  vector<Point> points = polygon.getPoints();
  int i, j, nvert = points.size();
  bool c = false;

  for(i = 0, j = nvert - 1; i < nvert; j = i++) {
    if( ( (points[i].y >= point.y ) != (points[j].y >= point.y) ) &&
        (point.x <= (points[j].x - points[i].x) * (point.y - points[i].y) / (points[j].y - points[i].y) + points[i].x)
      )
      c = !c;
  }

  return c;
}

int		point_in_polygon(t_var *v, int x, int y)
{
	int i;
	int j;
	int r;

	i = 0;
	r = 0;
	j = v->num - 1;
	while (i < v->num)
	{
		if (((v->ptn[i][1] >= y) != (v->ptn[j][1] >= y)) &&
		(x <= (v->ptn[j][0] - v->ptn[i][0]) * (y - v->ptn[i][1]) /
		(v->ptn[j][1] - v->ptn[i][1]) + v->ptn[i][0]))
			r = !r;
	}
}